串口通信Chrome插件，基于跨平台的插件通用开发框架-牛插中间件(https://github.com/wangzuohuai/WebRunLocal)开发，底层实现调用了微软串口通讯控件MSComm32.ocx。虽然主要适配谷歌浏览器，也可以用在FireFox、Opera、Edge、IE等浏览器中。通过此插件，可以在各种浏览器中通过JS非常方便的操作com口打印机、GSM 猫、手机、串口扫描枪、串口屏显、钱箱等设备。

以下是体验插件步骤：
1、访问 https://local.zorrosoft.com/ 下载最新的演示版并按TestWrl.txt说明安装好中间件；

2、请求安装串口插件，在页面https://local.zorrosoft.com先连接上中间件服务，然后输入一下内容点击发送：

{"req":"Plugin_Install","rid":1,"para":{"Name":"串口通信Chrome插件","PID":"C0B01CD6-7DD9-4D3C-B668-04168D5236FC","Date":"2019-07-15","Desc":"基于牛插中间之上用于串口通信的Chrome浏览器插件","DownAddr":"http://local.zorrosoft.com/Files/Plugin/WrlComm.pid","MD5":"F8F003EB478A93CC1F567D9879059D1C","Version":"1.0.1.3","Size":720896,"Type":1,"Cookie":"","Auth":"","TK":"877B9A60B5208AB942727375C41E8E3E6885FC17E33A7048E86F73E585239CA6FD6DE2F573EFABE84E9EC374DA2779AB19FCF3251CD0D6F77D70215DBD09A75FF02F653267D1CC6DF50270EE9987F3F2FC54911C3B410880A5B4FB4D794C3D4B88B28BF2F07BA88DDA3229EB65C13D17F6E93F0228DE7689A1DF68C286F0702EF5D244F27B71FB85D7FD812BC58CB88B4C5A551DDA9A5427EA8A29091C19DDBD782281BD7EA278D0FDA1542A99B07A63EDC9FE6ED2F905B081E3EFBF5EEDB573589AB78716CD929581DFA56C105538E8D6C3BA31188DE093D0686468EF17E0FAF041EF74C8F1EE64900592F0A35C78C5FE7C2CF851B2B036380A7CFC2B946DF4"}}

3、请求插件更新：

{"req":"Plugin_Update","rid":1,"para":{"Name":"串口通信Chrome插件","PID":"C0B01CD6-7DD9-4D3C-B668-04168D5236FC","Date":"2019-07-15","Desc":"基于牛插中间之上用于串口通信的Chrome浏览器插件","DownAddr":"http://local.zorrosoft.com/Files/Plugin/WrlComm_Update.pid","MD5":"1E802FD08E0D7303E26C5E92D7B03B98","Version":"1.0.1.3","Size":557056,"Type":1,"Cookie":"","Auth":"","TK":"A03F223DCD3C283D05E35A89814185FD8D6234218BAE5BBCA74F41BE0A279282F2597EEA3C20C0EDF45CAD5F3923196AF7523A624E2C4C79A341B5A8E99F18EC9A5779BD9E4D59C4FEA8BE088D0F86CC17AEA2DAAC39E0D27B7A4FA28608BF024FEE6B03E03E26A629FD080BAD5C548BE2FCE133B67108BB18F818260434B6DCD91D9A94E5908DBB788E793CD755E7D56163C60AB0D0567CEFBE70C4214DE9FA8D573DF9DC68F1C5E3DE357245B2F833F522BC2858AC834B5B21AF795792054656EEAC8829DF5DB41FFD904E0F609F1FFD7131A557407EFC8ACF2D7B431F35DBDE5EAE3BAF3CC2998BB961ABD2A2B08F540C2B2A75665B10909493DE3D8ADD7D"}}

4、连接请求串口通讯插件服务：

2)、文件上传下载
打开测试网页，输入地址：wss://wrl.zorrosoft.com?sid=668&pid=407F58DA-67A5-4C74-B9F9-44A02A20B205&flag=1 点击连接；
支持的协议功能如下：

A、获取参数
{"req":"SP_Get","rid":1,"para":{"Items":["OutFlag","Base64","CDHolding","CDTimeout","CommID","CommPort","CTSHolding","CTSTimeout","DSRHolding","DSRTimeout","DTREnable","Handshaking","InBufferSize","InBufferCount","Break","InputLen","Interval","NullDiscard","OutBufferSize","OutBufferCount","ParityReplace","PortOpen","RThreshold","RTSEnable","Settings","SThreshold","Output","Input","CommEvent","EOFEnable","InputMode"]}} 
获取指定名称的参数值，可批量获取，也可以获取单个。其中OutFlag设置SP_Event通知中未1时是否自动通知到前端，默认0，Base64指定通讯内容是否经过Base64编码后传输，默认0，如果通讯内容是二进制推荐设置为1。其它都是串口通讯的属性，Output和Input内容如果Base64设置为1表示是Base64编码后的结果，原通讯控件中布尔值规则1为真，0为假。
返回内容格式如下：
{"ret":0,"rid":1,"data":{"OutFlag":0,"Base64":0,"CDHolding":0,"CDTimeout":0,"CommID":-1,"CommPort":1,"CTSHolding":0,"CTSTimeout":0,"DSRHolding":0,"DSRTimeout":0,"DTREnable":0,"Handshaking":0,"InBufferSize":1024,"InBufferCount":0,"Break":0,"InputLen":0,"Interval":1000,"NullDiscard":0,"OutBufferSize":512,"OutBufferCount":0,"OutBufferCount":"?","PortOpen":0,"RThreshold":0,"RTSEnable":0,"Settings":"9600,n,8,1","SThreshold":0,"Output":"","Input":"","CommEvent":-4083,"EOFEnable":0,"InputMode":0}} 
请求Items中的每个名称都对应自己名称的值

B、设置参数
{"req":"SP_Put","rid":2,"para":{"OutFlag":0,"Base64":0,"CDHolding":0,"CDTimeout":0,"CommID":-1,"CommPort":1,"CTSHolding":0,"CTSTimeout":0,"DSRHolding":0,"DSRTimeout":0,"DTREnable":0,"Handshaking":0,"InBufferSize":1024,"InBufferCount":0,"Break":0,"InputLen":0,"Interval":1000,"NullDiscard":0,"OutBufferSize":512,"OutBufferCount":0,"OutBufferCount":"?","PortOpen":0,"RThreshold":0,"RTSEnable":0,"Settings":"9600,n,8,1","SThreshold":0,"Output":"","Input":"","CommEvent":-4083,"EOFEnable":0,"InputMode":0}} 
设置指定名称的参数值，规则和获取参数类似，Output和Input设置内容如果Base64设置为1，则必须是经过Base64编码后的内容。
返回内容格式如下：
{"ret":0,"rid":2,"data":{"OutFlag":1,"Base64":1,"CDHolding":0,"CDTimeout":1,"CommID":0,"CommPort":1,"CTSHolding":0,"CTSTimeout":1,"DSRHolding":0,"DSRTimeout":1,"DTREnable":1,"Handshaking":1,"InBufferSize":1,"InBufferCount":1,"Break":1,"InputLen":1,"Interval":1,"OutBufferSize":1,"OutBufferCount":1,"PortOpen":0,"RThreshold":1,"RTSEnable":1,"Settings":1,"SThreshold":1,"CommEvent":0,"EOFEnable":1,"InputMode":1}} 
每个设置结果，在对应的结果中，1成功，0失败

5、事件通知
5.1 收到内容通知
{"event":"SP_Input","data":{"Content":""}} 如果Base64为1，内容Content里是Base64编码后的结果，实际使用时请用Base64编码还原内容

5.2 发送内容通知
{"event":"SP_Output","data":{"Content":""}} 如果Base64为1，内容Content里是Base64编码后的结果，实际使用时请用Base64编码还原内容

5.3  通讯事件通知
{"event":"SP_Event","data":{"ID":""}} "ID为事件类型 1发送事件、3 clear-to-send 线变化、4 data-set ready 线变化、5 carrier detect 线变化、6 振铃检测、7 文件结束

5.3  错误事件通知
{"event":"SSP_Error","data":{"ID":""}} "ID为错误类型：
    comInvalidPropertyValue = 380,无效属性值
    comSetNotSupported = 383,属性为只读
    comGetNotSupported = 394,属性为只写
    comPortOpen = 8000,端口打开时操作不合法
    8001 超时值必须大于 0 
    comPortInvalid = 8002,无效端口号
    8003 属性只在运行时有效
    8004 属性在运行时为只读
    comPortAlreadyOpen = 8005,端口已经打开
    8006 设备标识符无效或不支持该标识符 
    8007 不支持设备的波特率
    8008 指定的字节大小无效
    8009 缺省参数错误
    8010 硬件不可用（被其它设备锁定）
    8011 函数不能分配队列 
    comNoOpen = 8012,设备没有打开
    8013 设备已经打开
    8014 不能使用通信通知 
    comSetCommStateFailed = 8015,不能设置端口状态
    8016 不能设置 comm 事件屏蔽 
    comPortNotOpen = 8018,仅当端口打开时操作才有效
    8019 设备忙
    comReadError = 8020,读端口设备错误
    comDCBError = 8021,为该端口检索设备控制块时的内部错误

    comBreak = 1001,接收到中断信号 
    comCTSTO = 1002, Clear-to-send 超时 
    comDSRTO = 1003,Data-set ready 超时 
    comFrame = 1004,帧错误 
    comOverrun = 1006,端口超速
    comCDTO = 1007,Carrier detect 超时 
    comRxOver = 1008,接收缓冲区溢出 
    comRxParity = 1009,Parity 错误 
    comTxFull = 1010,传输缓冲区满 
    comDCB = 1011检索端口 设备控制块 (DCB) 时的意外错误 
